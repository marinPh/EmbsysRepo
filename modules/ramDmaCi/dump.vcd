$date
	Sat Apr 20 05:32:38 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module ramDmaCiTestBench $end
$scope module DUT $end
$var reg 32 ! \ram[0] [31:0] $end
$upscope $end
$upscope $end
$scope module ramDmaCiTestBench $end
$scope module DUT $end
$var reg 32 " \ram[1] [31:0] $end
$upscope $end
$upscope $end
$scope module ramDmaCiTestBench $end
$scope module DUT $end
$var reg 32 # \ram[2] [31:0] $end
$upscope $end
$upscope $end
$scope module ramDmaCiTestBench $end
$scope module DUT $end
$var reg 32 $ \ram[3] [31:0] $end
$upscope $end
$upscope $end
$scope module ramDmaCiTestBench $end
$scope module DUT $end
$var wire 1 % clock $end
$var wire 8 & iseId [7:0] $end
$var wire 1 ' reset $end
$var wire 1 ( start $end
$var wire 32 ) valueA [31:0] $end
$var wire 32 * valueB [31:0] $end
$var wire 1 + writeEnable $end
$var wire 1 , s_isMyIse $end
$var wire 32 - result [31:0] $end
$var wire 1 . done $end
$var wire 9 / address [8:0] $end
$var parameter 8 0 customInstructionId $end
$var reg 32 1 data_out [31:0] $end
$var reg 1 2 finish_next_cc $end
$var reg 1 3 reading $end
$var reg 1 4 started $end
$var integer 32 5 i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1101 0
$end
#0
$dumpvars
bx 5
x4
x3
x2
bx 1
b0 /
x.
bx -
x,
0+
b0 *
b0 )
0(
1'
bx &
0%
bx $
bx #
bx "
bx !
$end
#5
0.
b11011110101011011011111011101111 $
b11011110101011011011111011101111 #
b11011110101011011011111011101111 "
b11011110101011011011111011101111 !
02
bx 1
03
b1000000000 5
1%
#10
x.
x2
0%
#15
0.
bx0xxxx0x0x0xx0xx0xxxxx0xxx0xxxx -
b11011110101011011011111011101111 $
b11011110101011011011111011101111 #
b11011110101011011011111011101111 "
b11011110101011011011111011101111 !
02
b11011110101011011011111011101111 1
b1000000000 5
1%
#20
x.
x2
0'
0%
#25
1%
#30
0%
#35
1(
1%
#40
0%
#45
1.
b11011110101011011011111011101111 -
1+
1,
b1101 &
b11111110 *
b1000000000 )
1%
#50
0%
#55
b11111110 -
b11111110 1
b1 /
b10111 *
b1000000001 )
b11111110 !
1%
#60
0%
#65
b11000 -
b11000 1
b10 /
b11000 "
b11000 *
b1000000010 )
1%
#70
0%
#75
b11 /
b11001 *
b1000000011 )
b11000 #
1%
#80
0%
#85
b100010 -
b100010 1
x.
0+
b10 /
b100010 $
b100010 *
b10 )
1%
#90
0%
#95
b11000 -
b11000 1
0(
1%
#100
0%
#105
b1 /
b100011 *
b1 )
1(
1%
#110
0%
#115
0(
1%
#120
0%
#125
b11 /
b100100 *
b11 )
1(
1%
#130
0%
#135
b100010 -
b100010 1
0(
1%
#140
0%
#145
b0 /
b0 )
1(
1%
#150
0%
#155
b11111110 -
b11111110 1
0(
1%
#160
0%
#165
1%
#170
0%
#175
1%
#180
0%
#185
1%
